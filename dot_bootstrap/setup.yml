---
- name: Machine setup
  hosts: localhost
  become: true
  connection: local
  gather_facts: true
  vars:
    nvim_version: "v0.11.4"

  tasks:
    - name: Get my user
      ansible.builtin.set_fact:
        remote_regular_user: "{{ ansible_env.SUDO_USER or ansible_user_id }}"

    - name: Install packages by apt
      ansible.builtin.apt:
        name:
          - 7zip
          - bat
          - ca-certificates
          - curl
          - btop
          - duf
          - eza
          - fd-find
          - ffmpeg
          - fish
          - git
          - imagemagick
          - jq
          - keepassxc
          - ncdu
          - nextcloud-desktop
          - plank
          - poppler-utils
          - preload
          - remmina
          - ripgrep
          - wget
          - zoxide
        state: present

    - name: Install packages by flatpak 
      community.general.flatpak:
        name: 
          - com.vscodium.codium
          - com.obsproject.Studio
          - org.videolan.VLC
          - org.gimp.GIMP
        state: present

    - name: Change shell to fish
      ansible.builtin.user:
        name: "{{ remote_regular_user }}"
        shell: /usr/bin/fish

#    - name: Add Brave Browser Repo
#      ansible.builtin.apt_repository:
#        name: brave-browser
#        description: Brave Browser
#        baseurl: https://brave-browser-rpm-release.s3.brave.com/x86_64/
#        gpgkey: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
#        gpgcheck: true
#        enabled: true
#
#    - name: Import Brave Browser GPG Key
#      ansible.builtin.rpm_key:
#        key: https://brave-browser-rpm-release.s3.brave.com/brave-core.asc
#        state: present
#
#    - name: Install Brave Browser
#      ansible.builtin.apt:
#        name: brave-browser
#        state: present

    - name: Check if nvim is installed
      ansible.builtin.command:
        cmd: nvim --version
      register: nvim_installed
      ignore_errors: true
      changed_when: false

    - name: Download nvim
      ansible.builtin.get_url:
        url: "https://github.com/neovim/neovim/releases/latest/download/nvim-linux-x86_64.tar.gz"
        dest: "/tmp/nvim-linux-x86_64.tar.gz"
        mode: "0644"
      when: nvim_installed is failed or nvim_installed.stdout is not search(nvim_version)

    - name: Extract nvim to /opt/nvim-linux-x86_64
      ansible.builtin.unarchive:
        src: "/tmp/nvim-linux-x86_64.tar.gz"
        dest: "/opt/"
      when: nvim_installed is failed or nvim_installed.stdout is not search(nvim_version)
    
    - name: Add nvim to alternatives
      community.general.alternatives:
        name: "editor"
        link: "/usr/bin/editor"
        path: "/opt/nvim-linux-x86_64/bin/nvim"
        priority: 20

    - name: Ensure fonts directory
      ansible.builtin.file:
        path: "~{{ remote_regular_user }}/.local/share/fonts"
        state: directory
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Check if Inter Font exists
      ansible.builtin.shell: "ls ~{{ remote_regular_user }}/.local/share/fonts/Inter*"
      register: inter_font_exists
      ignore_errors: true
      changed_when: false

    - name: Download Inter Font
      when: inter_font_exists is failed
      ansible.builtin.unarchive:
        src: https://github.com/rsms/inter/releases/download/v4.1/Inter-4.1.zip
        dest: "~{{ remote_regular_user }}/.local/share/fonts/"
        remote_src: true
        mode: "0755"
        owner: "{{ remote_regular_user }}"

    - name: Create Jet Brains Mono folder if it not exists
      ansible.builtin.file:
        path: "/usr/share/fonts/truetype/JetBrainsMono"
        state: directory
        mode: '0755'

    - name: Download and extract Jetbrains mono
      ansible.builtin.unarchive:
        src: https://github.com/ryanoasis/nerd-fonts/releases/download/v3.4.0/JetBrainsMono.zip
        dest: "/usr/share/fonts/truetype/JetBrainsMono/"
        creates: "/usr/share/fonts/truetype/JetBrainsMono/JetBrainsMonoNerdFont-Bold.ttf"
        remote_src: true
        mode: "0755"

    - name: Download Yazi Nightly Build .deb package
      get_url:
        url: https://github.com/sxyazi/yazi/releases/download/nightly/yazi-x86_64-unknown-linux-gnu.deb
        dest: /tmp/yazi-x86_64-unknown-linux-gnu.deb
 
    - name: Install Yazi Nightly Build .deb package
      apt:
        deb: /tmp/yazi-x86_64-unknown-linux-gnu.deb
